name: "CI: Ubuntu"

on: [ push, pull_request ]

env:
  SDL_VERSION: 2.0.14
  IMG_VERSION: 2.0.5
  MIX_VERSION: 2.0.4
  TTF_VERSION: 2.0.15

jobs:
  ubuntu-latest-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@v3
      - uses: lukka/get-cmake@v3.18.3

      - name: Install graphics drivers
        shell: bash
        run: sudo apt-get install libegl1-mesa-dev libgles2-mesa-dev libasound2-dev libpulse-dev

      - name: Emulate video device
        shell: bash
        run: |
          sudo apt install xvfb
          /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 800x600x24 -ac +extension GLX;
          sleep 3

      - name: Install GCC 10
        shell: bash
        run: |
          sudo apt update
          sudo apt install gcc-10 g++-10

      - name: Install SDL2
        shell: bash
        run: |
          curl -L https://www.libsdl.org/release/SDL2-${{env.SDL_VERSION}}.tar.gz | tar xz
          cd SDL2-${{env.SDL_VERSION}}
          ./configure
          make
          sudo make install

      - name: Install SDL2_image
        shell: bash
        run: |
          curl -L https://www.libsdl.org/projects/SDL_image/release/SDL2_image-${{env.IMG_VERSION}}.tar.gz | tar xz
          cd SDL2_image-${{env.IMG_VERSION}}
          ./configure
          make
          sudo make install

      - name: Install SDL2_mixer
        shell: bash
        run: |
          curl -L https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-${{env.MIX_VERSION}}.tar.gz | tar xz
          cd SDL2_mixer-${{env.MIX_VERSION}}
          ./configure
          make
          sudo make install

      - name: Install SDL2_ttf
        shell: bash
        run: |
          curl -L https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-${{env.TTF_VERSION}}.tar.gz | tar xz
          cd SDL2_ttf-${{env.TTF_VERSION}}
          ./configure
          make
          sudo make install

      - name: Create build directory
        shell: bash
        run: mkdir -p build

      - name: Build
        working-directory: ./build
        shell: bash
        env:
          CC: gcc-10
          CXX: g++-10
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Debug -GNinja
          ninja

      - name: Run tests
        working-directory: ./build/test/unit-tests
        shell: bash
        run: ./UnitTests